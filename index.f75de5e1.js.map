{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst startBtn = document.querySelector('.start');\nconst fieldRows = document.querySelector('tbody').rows;\nconst scoreBoard = document.querySelector('.game-score');\n\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nconst rows = 4;\nconst columns = 4;\nlet score = 0;\n\nlet field = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nstartBtn.addEventListener('click', () => {\n  field = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  score = 0;\n\n  updateTheGame();\n  setNewCell();\n  setNewCell();\n\n  startBtn.classList.add('restart');\n  startBtn.innerText = 'Restart';\n\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n});\n\nfunction setNewCell() {\n  if (!checkIfEmpty()) {\n    return;\n  }\n\n  const value = Math.random() > 0.1 ? 2 : 4;\n\n  let check = false;\n\n  while (!check) {\n    const row = Math.floor(Math.random() * rows);\n    const col = Math.floor(Math.random() * columns);\n\n    if (field[row][col] === 0) {\n      field[row][col] = value;\n      check = true;\n\n      updateTheGame();\n    }\n  }\n}\n\nfunction updateTheGame() {\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col < columns; col++) {\n      const currentCell = fieldRows[row].cells[col];\n      const num = field[row][col];\n\n      updateCell(currentCell, num);\n    }\n  }\n\n  scoreBoard.innerText = String(score);\n}\n\nfunction updateCell(cell, num) {\n  cell.innerText = '';\n  cell.classList.value = '';\n  cell.classList.add('field-cell');\n\n  if (num > 0) {\n    cell.innerText = String(num);\n    cell.classList.add(`field-cell--${String(num)}`);\n  }\n}\n\nfunction checkIfEmpty() {\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col < columns; col++) {\n      if (field[row][col] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\ndocument.addEventListener('keyup', e => {\n  if (startBtn.classList.contains('restart')) {\n    switch (e.code) {\n      case 'ArrowLeft':\n        slideLeft();\n        // setNewCell();\n        break;\n\n      case 'ArrowRight':\n        slideRight();\n        // setNewCell();\n        break;\n\n      case 'ArrowUp':\n        slideUp();\n        // setNewCell();\n        break;\n\n      case 'ArrowDown':\n        slideDown();\n        // setNewCell();\n        break;\n    }\n  }\n\n  if (!checkIfPossible()) {\n    checkIfLose();\n  }\n});\n\nfunction filterRow(row) {\n  return row.filter(el => el !== 0);\n}\n\nfunction slide(row) {\n  let newRow = filterRow(row);\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1] && isFinite(newRow[i])) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score += newRow[i];\n      checkIfWin(newRow[i]);\n    }\n  }\n  newRow = filterRow(newRow);\n\n  while (newRow.length < columns) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction checkIfWin(value) {\n  if (value === 2048) {\n    messageWin.classList.remove('hidden');\n    startBtn.classList.remove('restart');\n    startBtn.innerText = 'Start';\n  }\n}\n\nfunction slideLeft() {\n  const initialField = field.map(row => [...row]);\n\n  for (let r = 0; r < rows; r++) {\n    let row = field[r];\n\n    row = slide(row);\n    field[r] = row;\n  }\n\n  if (!isArraysEquals(initialField, field)) {\n    setNewCell();\n  }\n\n  updateTheGame();\n}\n\nfunction slideRight() {\n  const initialField = field.map(row => [...row]);\n\n  for (let r = 0; r < rows; r++) {\n    let row = field[r];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    field[r] = row;\n  }\n\n  if (!isArraysEquals(initialField, field)) {\n    setNewCell();\n  }\n\n  updateTheGame();\n}\n\nfunction slideUp() {\n  const initialField = field.map(row => [...row]);\n\n  for (let col = 0; col < columns; col++) {\n    let row = [field[0][col], field[1][col], field[2][col], field[3][col]];\n\n    row = slide(row);\n\n    for (let i = 0; i < columns; i++) {\n      field[i][col] = row[i];\n    }\n  }\n\n  if (!isArraysEquals(initialField, field)) {\n    setNewCell();\n  }\n\n  updateTheGame();\n}\n\nfunction slideDown() {\n  const initialField = field.map(row => [...row]);\n\n  for (let col = 0; col < columns; col++) {\n    let row = [field[0][col], field[1][col], field[2][col], field[3][col]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let i = 0; i < columns; i++) {\n      field[i][col] = row[i];\n    }\n  }\n\n  if (!isArraysEquals(initialField, field)) {\n    setNewCell();\n  }\n\n  updateTheGame();\n}\n\nfunction checkIfPossible() {\n  let check = false;\n\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col < columns; col++) {\n      if (row < 3) {\n        if (field[row][col] === field[row + 1][col]\n          || field[row][col] === field[row][col + 1]) {\n          check = true;\n        }\n      }\n    }\n  }\n\n  if (!check && !checkIfEmpty()) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction checkIfLose() {\n  messageLose.classList.remove('hidden');\n  startBtn.classList.remove('restart');\n  startBtn.innerText = 'Start';\n}\n\nfunction isArraysEquals(arrayA, arrayB) {\n  for (let i = 0; i < arrayA.length; i++) {\n    for (let j = 0; j < arrayA[i].length; j++) {\n      if (arrayA[i][j] !== arrayB[i][j]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}